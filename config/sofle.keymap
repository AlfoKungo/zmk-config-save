/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LAYER_PICKER 3
#define LEFT_LAYER 4

&sl {
    release-after-ms = <2000>;
};

&mmv {
    time-to-max-speed-ms = <600>;
    acceleration-exponent = <1>;
};

&mwh {
    time-to-max-speed-ms = <3500>;
    acceleration-exponent = <1>;
};

#define U_MOUSE_MOVE_MAX 1250
#define U_MOUSE_SCROLL_MAX 100

#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT
#define MOVE_UP MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_VERT(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_HOR(U_MOUSE_MOVE_MAX)

#undef SCROLL_UP
#undef SCROLL_DOWN
#undef SCROLL_LEFT
#undef SCROLL_RIGHT
#define SCROLL_UP SCROLL_VERT(U_MOUSE_SCROLL_MAX)
#define SCROLL_DOWN SCROLL_VERT(-U_MOUSE_SCROLL_MAX)
#define SCROLL_LEFT SCROLL_HOR(-U_MOUSE_SCROLL_MAX)
#define SCROLL_RIGHT SCROLL_HOR(U_MOUSE_SCROLL_MAX)


/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
&sl LAYER_PICKER	&kp N1			&kp N2		&kp N3		&kp N4		&kp N5										&kp N6	&kp N7		&kp N8		&kp N9		&kp N0		&none
&kp ESC				&kp Q			&kp W		&kp E		&kp R		&kp T										&kp Y	&kp U		&kp I		&kp O		&kp P		&kp BSPC
&kp TAB				&kp A			&kp S		&kp D		&kp F		&kp G										&kp H	&kp J		&kp K		&kp L		&kp SEMI	&kp SQT
&kp LSHIFT			&kp Z			&kp X		&kp C		&kp V		&kp B			&kp C_MUTE			&none	&kp N	&kp M		&kp COMMA	&kp DOT		&kp FSLH	&kp RSHFT
					&kp	LALT		&mo 1		&kp LCTRL	&kp SPACE	&kp RET			&kp SPACE			&mo 2	&kp RCTRL	&kp RALT	&kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
// |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&sl LAYER_PICKER	&kp F1		&kp F2		&kp F3		&kp F4		&kp F5							&kp F6		&kp F7		&kp F8          &kp F9    &kp F10   &kp F11
&kp BSPC			&none		&kp UP		&none		&none		&none							&kp N6		&kp N7		&kp N8          &kp N9    &kp N0    &kp F12
&kp LGUI				&kp LEFT	&kp DOWN	&kp RIGHT	&none		&none							&kp CARET	&kp AMPS	&kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp PIPE
&none				&none		&none		&none		&none		&none		&none		&none	&kp LBKT	&kp RBKT	&kp SEMI        &kp COLON &kp BSLH  &none
								&none		&none		&none		&none		&none		&none	&none		&none		&none			&none
            >;

            sensor-bindings = <&inc_dec_kp LEFT_ARROW RIGHT_ARROW &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
// |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
// |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
//              |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&sl LAYER_PICKER &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4             &none    &none    &none   &none    &none  &none
&none     &kp INS      &kp PSCRN    &kp K_CMENU  &none       &none                   &kp PG_UP &none    &kp UP   &none    &kp N0  &none
&none     &kp LALT     &kp LCTRL    &kp LSHFT    &none       &kp CLCK                 &kp PG_DN &kp LEFT  &kp DOWN &kp RIGHT &kp DEL &kp BSPC
&none     &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &none  &none   &none  &none    &none    &none   &none    &none  &none
                        &none       &none       &none       &none  &none   &none  &none    &none    &none   &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
		
		picker_layer {
// ------------------------------------------------------------------------------------------------------------
// |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
// |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
// |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
//              |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&sl LAYER_PICKER	&to 0			&to 1				&to 2			&none				&none									&none	&none	&none	&none	&none	&none
&kp ESC				&kp C_PREVIOUS	&kp C_PLAY_PAUSE	&kp C_NEXT		&kp PRINTSCREEN		&none									&none	&none	&none	&none	&none	&none
&none				&none			&kp C_SLEEP			&none			&bootloader			&none									&none	&none	&none	&none	&none	&none
&rgb_ug RGB_COLOR_HSB(128,100,100)				&rgb_ug RGB_TOG			&none    			&none			&none				&none			&none			&none	&none	&none	&none	&none	&none	&none
									&none				&none			&none				&out OUT_TOG  	&none			&none	&none	&none	&none	&none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
		
		left {
// ------------------------------------------------------------------------------------------------------------
// |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
// |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
// |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
//              |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <

&none		&kp N6	 &kp N7			&kp N8		&kp N9		&kp N0								&none	&none	&none	&none	&none	&none
&none		&kp Y	&kp U			&kp I		&kp O		&kp P								&none	&none	&none	&none	&none	&none
&none		&kp H	&kp J			&kp K		&kp L		&kp SEMI							&none	&none	&none	&none	&none	&none
&kp BSPC	&kp N	&kp M			&kp COMMA	&kp DOT		&kp FSLH	&none			&none	&none	&none	&none	&none	&none	&none
					&mo LEFT_LAYER	&none		&none		&kp RGUI  	&none			&none	&none	&none	&none	&none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
